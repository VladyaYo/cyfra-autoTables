import pandas as pd

def sort_category_analytic():
    # Шаг 1: Загрузка таблицы
    df = pd.read_csv("data/ads_data.csv", skiprows=2)  # Пропускаем первые две строки, если они содержат ненужные заголовки

    # Убираем пробелы в начале и в конце строковых значений
    df = df.apply(lambda x: x.str.strip() if x.dtype == "object" else x)

    # Преобразуем столбцы с числовыми данными, удаляя пробелы, заменяя неразрывные пробелы и запятую на точку
    for col in ['Кліки', 'Вартість', 'Конверсії', 'Цінність конв.']:
        df[col] = df[col].astype(str) \
            .str.replace('\xa0', ' ', regex=False)  # Заменяем неразрывные пробелы на обычные пробелы
        df[col] = df[col].str.replace(' ', '', regex=False)  # Убираем все пробелы
        df[col] = df[col].str.replace(',', '.', regex=False)  # Заменяем запятую на точку
        df[col] = pd.to_numeric(df[col], errors='coerce')  # Преобразуем в числовой формат

    # Преобразуем столбец 'Кліки' в целочисленный тип
    for col in ['Кліки']:
        if df[col].dtype != 'Int64':  # Проверка, чтобы не конвертировать уже преобразованные
            df[col] = pd.to_numeric(df[col], errors='coerce').astype('Int64')

    # Шаг 2: Определяем категории и условия для фильтрации
    categories = {
        'Apple + аксессуары': (
            (df['Тип продукту (2-й рівень)'] == 'apple') &
            (
                (df['Тип продукту (3-й рівень)'] == 'аксессуары для техники apple') |
                (df['Тип продукту (3-й рівень)'] == 'аксесуари для техніки apple') |
                (df['Тип продукту (3-й рівень)'] == 'iphone')
            )
        ),
        'Смартфоны': (
            (df['Тип продукту (2-й рівень)'] == 'мобильная связь') &
            ~df['Тип продукту (4-й рівень)'].str.contains('зарядные станции', case=False, na=False) &
            ~df['Тип продукту (4-й рівень)'].str.contains('зарядні станції', case=False, na=False) |
            (df['Тип продукту (2-й рівень)'] == "мобільний зв'язок") &
            ~df['Тип продукту (4-й рівень)'].str.contains( 'зарядные станции', case=False, na=False) &
            ~df['Тип продукту (4-й рівень)'].str.contains('зарядні станції', case=False, na=False)
        ),
        'Ноутбуки и пк': (
            (df['Тип продукту (2-й рівень)'] == 'ноутбуки, пк, планшети') &
                (
                    (df['Тип продукту (3-й рівень)'] == 'ноутбуки і моноблоки') |
                    (df['Тип продукту (3-й рівень)'] == 'пк і комплектуючі') |
                    (df['Тип продукту (3-й рівень)'] == 'ноутбуки и моноблоки')|
                    (df['Тип продукту (3-й рівень)'] == 'пк и комплектующие')
                )
                |
                (df['Тип продукту (2-й рівень)'] == 'ноутбуки, пк, планшеты') &
                (
                    (df['Тип продукту (3-й рівень)'] == 'ноутбуки і моноблоки') |
                    (df['Тип продукту (3-й рівень)'] == 'пк і комплектуючі') |
                    (df['Тип продукту (3-й рівень)'] == 'ноутбуки и моноблоки')|
                    (df['Тип продукту (3-й рівень)'] == 'пк и комплектующие')
                )
        ),
        'Мелкая бытовая техника':(
            (df['Тип продукту (2-й рівень)'] == 'бытовая техника') &
            (df['Тип продукту (3-й рівень)'] == 'мелкая бытовая техника') |
            # (df['Тип продукту (3-й рівень)'] == 'встраиваемая бытовая техника') |
            (df['Тип продукту (2-й рівень)'] == 'побутова техніка') &
            (df['Тип продукту (3-й рівень)'] == 'дрібна побутова техніка')
        ),
        'Крупная бытовая техника':(
            (df['Тип продукту (2-й рівень)'] == 'бытовая техника') &
            (df['Тип продукту (3-й рівень)'] == 'крупная бытовая техника') |
            (df['Тип продукту (3-й рівень)'] == 'встраиваемая бытовая техника')  |
            (df['Тип продукту (3-й рівень)'] == 'оборудование для магазинов и ресторанов') |
            (df['Тип продукту (2-й рівень)'] == 'побутова техніка') &
            (df['Тип продукту (3-й рівень)'] == 'велика побутова техніка') |
            (df['Тип продукту (3-й рівень)'] == 'вбудовувана побутова техніка') |
            (df['Тип продукту (3-й рівень)'] == 'обладнання для магазинів і ресторанів')
        ),
        'Тв, аудио-видео техника':(
            (df['Тип продукту (2-й рівень)'] == 'тв, аудио-видео техника') &
            (df['Тип продукту (3-й рівень)'] == 'телевизоры') |
            (df['Тип продукту (3-й рівень)'] == 'аксессуары для телевизоров') |
            (df['Тип продукту (3-й рівень)'] == 'проекционное оборудование') |
            (df['Тип продукту (3-й рівень)'] == 'домашнее аудио. кино.') |
            (df['Тип продукту (2-й рівень)'] == 'тб, аудіо- і відеотехніка') &
            (df['Тип продукту (3-й рівень)'] == 'телевізори') |
            (df['Тип продукту (3-й рівень)'] == 'аксесуари для телевізорів') |
            (df['Тип продукту (3-й рівень)'] == 'проекційне обладнання') |
            (df['Тип продукту (3-й рівень)'] == 'домашнє аудіо. кіно.')
        ),
        # to do: проверить категорию
        # 'Холодильники и морозильные камеры': (
        #     (df['Тип продукту (2-й рівень)'] == 'бытовая техника') &
        #     (df['Тип продукту (3-й рівень)'] == 'крупная бытовая техника') |
        #     (df['Тип продукту (3-й рівень)'] == 'встраиваемая бытовая техника') &
        #     (df['Тип продукту (4-й рівень)'] == 'встраиваемые холодильники')|
        #     (df['Тип продукту (2-й рівень)'] == 'побутова техніка') &
        #     (df['Тип продукту (3-й рівень)'] == 'велика побутова техніка') |
        #     (df['Тип продукту (3-й рівень)'] == 'вбудовувана побутова техніка') &
        #     (df['Тип продукту (4-й рівень)'] == 'вбудовувані холодильники')
        # ),
        'Mac/iPad': (
            (df['Тип продукту (2-й рівень)'] == 'apple') &
            (df['Тип продукту (3-й рівень)'] == 'mac') |
            (df['Тип продукту (3-й рівень)'] == 'ipad')
        ),
        'Планшеты/ эл книги': (
            (df['Тип продукту (2-й рівень)'] == 'ноутбуки, пк, планшеты') &
            (df['Тип продукту (3-й рівень)'] == 'планшеты и электронные книги') |
            (df['Тип продукту (2-й рівень)'] == 'ноутбуки, пк, планшети') &
            (df['Тип продукту (3-й рівень)'] == 'планшети та електронні книги')
        ),
        # to do проверить категорию
        # 'Стиральные машины': (
        #     (df['Тип продукту (2-й рівень)'] == 'бытовая техника') &
        #     (df['Тип продукту (3-й рівень)'] == 'крупная бытовая техника') |
        #     (df['Тип продукту (3-й рівень)'] == 'встраиваемая бытовая техника') &
        #     (df['Тип продукту (4-й рівень)'] == 'стиральные машины') |
        #     (df['Тип продукту (4-й рівень)'] == 'сушильные машины') |
        #     (df['Тип продукту (2-й рівень)'] == 'побутова техніка') &
        #     (df['Тип продукту (3-й рівень)'] == 'велика побутова техніка') |
        #     (df['Тип продукту (3-й рівень)'] == 'вбудовувана побутова техніка') &
        #     (df['Тип продукту (4-й рівень)'] == 'вбудовувані пральні машини') |
        #     (df['Тип продукту (4-й рівень)'] == 'пральні машини') |
        #     (df['Тип продукту (4-й рівень)'] == 'сушильні машини')
        # ),
        'Apple watch/AirPods': (
                (df['Тип продукту (2-й рівень)'] == 'apple') &
                (df['Тип продукту (3-й рівень)'] == 'apple watch')|
                (df['Тип продукту (4-й рівень)'] == 'навушники') &
                (df['Тип продукту (4-й рівень)'] == 'apple') |
                (df['Тип продукту (4-й рівень)'] == 'наушники') &
                (df['Тип продукту (4-й рівень)'] == 'apple')
        ),
        'Цифровые фотоаппараты/видеокамеры': (
                (df['Тип продукту (2-й рівень)'] == 'фотосъемка') |
                (df['Тип продукту (2-й рівень)'] == 'фото съемка') |
                (df['Тип продукту (2-й рівень)'] == 'фотозйомка')

        ),
        'SSD накопители': (
                (df['Тип продукту (4-й рівень)'] == 'ssd-накопичувачі') |
                (df['Тип продукту (4-й рівень)'] == 'ssd-накопители')
        ),
        'Наушники': (
                (df['Тип продукту (4-й рівень)'] == 'наушники') |
                (df['Тип продукту (4-й рівень)'] == 'навушники')
        ),
        'Умные часы': (
                (df['Тип продукту (3-й рівень)'] == 'умные часы (smart watch)') |
                (df['Тип продукту (3-й рівень)'] == 'аксессуары для умных часов') |
                (df['Тип продукту (3-й рівень)'] == 'розумні годинники (smart watch)') |
                (df['Тип продукту (3-й рівень)'] == 'аксесуари для розумних годинників')

        ),
        'БАДы': (
                (df['Тип продукту (2-й рівень)'] == 'бады') |
                (df['Тип продукту (2-й рівень)'] == 'бади')
        ),
        'Зарядные станции': (
                (df['Тип продукту (4-й рівень)'] == 'зарядные станции') |
                (df['Тип продукту (4-й рівень)'] == 'зарядні станції')
                # (df['Тип продукту (4-й рівень)'] == 'внешние аккумуляторы')|
                # (df['Тип продукту (4-й рівень)'] == 'зовнішні акумулятори')
        ),
        'БУ': (
                (df['Тип продукту (2-й рівень)'] == 'прочие') &
                (df['Тип продукту (3-й рівень)'] == 'уценка и услуги')|
                (df['Тип продукту (2-й рівень)'] == 'інше')|
                (df['Тип продукту (4-й рівень)'] == 'уцінка та послуги')
        ),
        'Дроны': (
                (df['Тип продукту (3-й рівень)'] == 'радиоуправляемые модели хобби')|
                (df['Тип продукту (3-й рівень)'] == 'радіокеровані моделі хобі')
        ),
        'Офисная техника': (
                (df['Тип продукту (3-й рівень)'] == 'офисная техника')|
                (df['Тип продукту (3-й рівень)'] == 'офісна техніка')
        ),
        # Добавьте дополнительные категории и условия по аналогии
    }

    # Шаг 3: Создаем таблицу с категориями
    result_df = pd.DataFrame()

    for category, condition in categories.items():
        # Создаем копию отфильтрованных данных
        category_data = df[condition].copy()
        category_data['Категория'] = category  # Безопасно добавляем колонку
        result_df = pd.concat([result_df, category_data], ignore_index=True)

    # Шаг 4: Группируем по категории и суммируем нужные столбцы
    summed_result_df = result_df.groupby('Категория', as_index=False).agg({
        'Кліки': 'sum',
        'Вартість': 'sum',
        'Конверсії': 'sum',
        'Цінність конв.': 'sum'
    })

    # Шаг 5: Сохранение результата
    export_path = "export_data/categorized_table.csv"
    summed_result_df.to_csv(export_path, index=False)

    # Выводим результаты
    print(summed_result_df)

    return export_path